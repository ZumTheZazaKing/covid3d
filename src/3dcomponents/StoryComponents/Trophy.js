/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: TheLastAirblender (https://sketchfab.com/TheLastAirblender)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/day31-trophy-5cbb82dda4284841b51d6d0974a741ab
title: Day31 Trophy
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Trophy(props) {
  const group = useRef();
  useFrame(() => (group.current.rotation.y += 0.01));
  const { nodes, materials } = useGLTF("/trophy.glb");
  return (
    <group ref={group} {...props} dispose={null}
        scale={0.5}
        position={[63,-1,0]}
    >
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_4.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_6.geometry}
            material={materials["Material.001"]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/trophy.glb");
